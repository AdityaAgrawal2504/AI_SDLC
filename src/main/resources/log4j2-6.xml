<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN" monitorInterval="30">
    <Properties>
        <Property name="LOG_PATTERN">
            %d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'} %p %c{1.} [%t] %m%n
        </Property>
        <Property name="APP_LOG_ROOT">./logs</Property>
    </Properties>

    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </Console>

        <!-- JSON Template Layout for structured, machine-readable logs -->
        <!-- This can be easily adapted for Kafka, Event Hub, etc. -->
        <RollingFile name="JsonFile"
                     fileName="${APP_LOG_ROOT}/omqs-13579.log.json"
                     filePattern="${APP_LOG_ROOT}/omqs-13579-%d{yyyy-MM-dd}-%i.log.json.gz">
            <JsonTemplateLayout eventTemplateUri="classpath:log4j2-json-template.json"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
            <DefaultRolloverStrategy max="10"/>
        </RollingFile>

    </Appenders>

    <Loggers>
        <Root level="info">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="JsonFile"/>
        </Root>

        <Logger name="com.example.offline_message_queueing_service_13579" level="debug" additivity="false">
             <AppenderRef ref="Console"/>
             <AppenderRef ref="JsonFile"/>
        </Logger>

    </Loggers>
</Configuration>
```
```json
// src/main/resources/log4j2-json-template.json
{
  "timestamp": {
    "$resolver": "timestamp",
    "pattern": {
      "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
      "timeZone": "UTC"
    }
  },
  "level": {
    "$resolver": "level",
    "field": "name"
  },
  "service": "OfflineMessageQueueingService",
  "thread": {
    "$resolver": "thread",
    "field": "name"
  },
  "logger": {
    "$resolver": "logger",
    "field": "name"
  },
  "message": {
    "$resolver": "message",
    "stringified": true
  },
  "context": {
    "$resolver": "mdc"
  },
  "exception": {
    "$resolver": "exception",
    "stackTrace": {
      "stringified": true
    }
  }
}
```
```java
// src/main/java/com/example/offline_message_queueing_service_13579/OfflineMessageQueueingService13579Application.java