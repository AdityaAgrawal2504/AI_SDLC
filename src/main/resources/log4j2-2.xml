<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="INFO">
    <Appenders>
        <Console name="ConsoleAppender" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>

        <RollingFile name="FileAppender"
                     fileName="logs/verify-otp-api-votp-8a9b.log"
                     filePattern="logs/verify-otp-api-votp-8a9b-%d{yyyy-MM-dd}-%i.log.gz">
            <JsonLayout complete="false" compact="true" eventEol="true">
                <KeyValuePair key="timestamp" value="$${date:yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}"/>
            </JsonLayout>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="10"/>
        </RollingFile>

        <!--
        Example placeholders for external system appenders (e.g., Kafka).
        These would require additional dependencies (e.g., log4j-kafka-appender).
        -->
        <!--
        <Kafka name="KafkaAppender" topic="app-logs-topic">
            <PatternLayout pattern="%msg" />
            <Property name="bootstrap.servers">kafka-broker:9092</Property>
        </Kafka>
        <AzureEventHub name="EventHubAppender" connectionString="..." eventHubName="logs-hub">
            <JsonLayout .../>
        </AzureEventHub>
        -->

    </Appenders>
    <Loggers>
        <Root level="info">
            <AppenderRef ref="ConsoleAppender"/>
            <AppenderRef ref="FileAppender"/>
            <!-- <AppenderRef ref="KafkaAppender"/> -->
        </Root>

        <Logger name="com.example.auth.verifyotp" level="debug" additivity="false">
            <AppenderRef ref="ConsoleAppender"/>
            <AppenderRef ref="FileAppender"/>
        </Logger>
    </Loggers>
</Configuration>
```
```properties
# Server Configuration
server.port=8080

# Logging Configuration
# References the uniquely named log4j2 config file
logging.config=classpath:log4j2-VerifyOtpApi-votp-8a9b.xml

# Application Specific Properties
# A strong, base64-encoded secret key for signing JWTs.
# In production, this MUST be loaded from a secure vault or environment variable.
# This is a sample: openssl rand -base64 32
jwt.secret=XyZ9aBcDeFgHiJkLmNoPqRsTuVwXyZ0123456789aBcDeFgHiJkLmNo=
# JWT Access Token lifetime in seconds (e.g., 3600 = 1 hour)
jwt.expiration.access-token=3600

# Temporary Session Token lifetime in seconds (e.g., 300 = 5 minutes)
jwt.expiration.session-token=300

# OTP Configuration
# OTP validity period in minutes. Should match the session token expiration.
otp.validity.minutes=5
# Maximum number of OTP verification attempts allowed per session.
otp.max-attempts=3
```
```java