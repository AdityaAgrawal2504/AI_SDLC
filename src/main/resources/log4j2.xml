<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN" monitorInterval="30">
    <Properties>
        <Property name="LOG_PATTERN">%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'} %p %c{1.} [%t] %m%n</Property>
        <Property name="APP_LOG_ROOT">logs</Property>
    </Properties>
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT" follow="true">
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </Console>

        <!-- File Appender for structured JSON logs -->
        <RollingFile name="File"
                     fileName="${APP_LOG_ROOT}/user-registration-api.log"
                     filePattern="${APP_LOG_ROOT}/user-registration-api-%d{yyyy-MM-dd}-%i.log.gz">
            <JsonLayout complete="false" compact="true" eventEol="true">
                <KeyValuePair key="timestamp" value="$${date:yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}"/>
            </JsonLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="10MB"/>
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <DefaultRolloverStrategy max="10"/>
        </RollingFile>
        
        <!-- 
            Abstracted Logging Appender:
            This custom appender forwards log events to our abstracted `LoggingEventBroker`.
            This allows us to switch the underlying implementation (Kafka, Event Hub, etc.)
            without changing the Log4j2 configuration.
        -->
        <Appender type="com.example.userregistration.util.logging.EventBrokerAppender" name="EventBroker">
            <PatternLayout pattern="%m%n"/>
        </Appender>

    </Appenders>
    <Loggers>
        <Logger name="com.example.userregistration" level="info" additivity="false">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="File"/>
            <AppenderRef ref="EventBroker"/>
        </Logger>
        <Root level="warn">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="File"/>
        </Root>
    </Loggers>
</Configuration>
```
```properties
# src/main/resources/application.properties
# Spring Boot Configuration
server.port=8080
spring.application.name=UserRegistrationAPI

# H2 Database Settings for in-memory persistence
spring.datasource.url=jdbc:h2:mem:userdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enable H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# Specify custom log4j2 config file
logging.config=classpath:log4j2-spring-URA.xml
```
```java
// src/main/java/com/example/userregistration/UserRegistrationApiApplication.java